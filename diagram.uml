@startuml
!theme aws-orange
!theme plain

set namespaceSeparator ::

left to right direction

abstract class "Core::Contracts::Data::BaseModel" {
}

abstract class "Core::Contracts::Domain::BaseRepository" {
  +BaseMapper<BaseEntity, BaseModel> mapper
  +BaseDataSource dataSource
}

"Core::Contracts::Domain::BaseRepository" o-- "Core::Contracts::Domain::BaseMapper<BaseEntity, BaseModel>"
"Core::Contracts::Domain::BaseRepository" o-- "Core::Contracts::Domain::BaseDataSource"

abstract class "Core::Contracts::Domain::BaseMapper" {
  +M toModel()
  +E toEntity()
}

abstract class "Core::Contracts::Domain::BaseService" {
  +BaseRepository repository
}

"Core::Contracts::Domain::BaseService" o-- "Core::Contracts::Domain::BaseRepository"

abstract class "Core::Contracts::Domain::BaseDataSource" {
}

abstract class "Core::Contracts::Presentation::BaseEntity" {
}

abstract class "Core::State Listeners::StateListener" {
  +void onChanged()
}

class "Market Ticks::Data::TickStreamRepoistory" {
  +TickStreamMapper mapper
  +BaseTickStreamDataSource dataSource
  +Stream<TickStreamEntity> getTickStream()
}

"Market Ticks::Data::TickStreamRepoistory" o-- "Market Ticks::Domain::TickStreamMapper"
"Market Ticks::Data::TickStreamRepoistory" o-- "Market Ticks::Domain::BaseTickStreamDataSource"
"Market Ticks::Domain::BaseTickStreamRepository" <|-- "Market Ticks::Data::TickStreamRepoistory"

class "Market Ticks::Data::TickStreamModel" {
  +double ask
  +double bid
  +int epoch
  +String id
  +int pipSize
  +double quote
  +String symbol
}

"Core::Contracts::Data::BaseModel" <|-- "Market Ticks::Data::TickStreamModel"

class "Market Ticks::Data::TickStreamDataSource" {
  +Stream<TickStreamModel> getTickStream()
}

"Market Ticks::Domain::BaseTickStreamDataSource" <|-- "Market Ticks::Data::TickStreamDataSource"

abstract class "Market Ticks::Domain::BaseTickStreamService" {
  +BaseTickStreamRepository repository
  +Stream<TickStreamEntity> getTickStream()
}

"Market Ticks::Domain::BaseTickStreamService" o-- "Market Ticks::Domain::BaseTickStreamRepository"
"Core::Contracts::Domain::BaseService" <|-- "Market Ticks::Domain::BaseTickStreamService"

class "Market Ticks::Domain::TickStreamMapper" {
  +TickStreamModel toModel()
  +TickStreamEntity toEntity()
}

"Core::Contracts::Domain::BaseMapper" <|-- "Market Ticks::Domain::TickStreamMapper"

abstract class "Market Ticks::Domain::BaseTickStreamDataSource" {
  +Stream<TickStreamModel> getTickStream()
}

"Core::Contracts::Domain::BaseDataSource" <|-- "Market Ticks::Domain::BaseTickStreamDataSource"

abstract class "Market Ticks::Domain::BaseTickStreamRepository" {
  +TickStreamMapper mapper
  +BaseTickStreamDataSource dataSource
  +Stream<TickStreamEntity> getTickStream()
}

"Market Ticks::Domain::BaseTickStreamRepository" o-- "Market Ticks::Domain::TickStreamMapper"
"Market Ticks::Domain::BaseTickStreamRepository" o-- "Market Ticks::Domain::BaseTickStreamDataSource"
"Core::Contracts::Domain::BaseRepository" <|-- "Market Ticks::Domain::BaseTickStreamRepository"

class "Market Ticks::Presentation::TickStreamService" {
  +Stream<TickStreamEntity> getTickStream()
}

"Market Ticks::Domain::BaseTickStreamService" <|-- "Market Ticks::Presentation::TickStreamService"

class "Market Ticks::Presentation::TickStreamWidget" {
  +TickStreamEntity entity
}

"Market Ticks::Presentation::TickStreamWidget" o-- "Market Ticks::Presentation::TickStreamEntity"

class "Market Ticks::Presentation::State::TickStreamCubitExtended" {
  +void onChanged()
}

"Market Ticks::Presentation::State::TickSteamCubit" <|-- "Market Ticks::Presentation::State::TickStreamCubitExtended"
"Core::State Listeners::StateListener" <|-- "Market Ticks::Presentation::State::TickStreamCubitExtended"

class "Market Ticks::Presentation::TickStreamEntity" {
  +double ask
  +double bid
  +int epoch
  +String id
  +int pipSize
  +double quote
  +String symbol
}

"Core::Contracts::Presentation::BaseEntity" <|-- "Market Ticks::Presentation::TickStreamEntity"

class "Market Ticks::Presentation::State::TickSteamCubit" {
  +BaseTickStreamService service
  +void getTickStream()
}

"Market Ticks::Presentation::State::TickSteamCubit" o-- "Market Ticks::Domain::BaseTickStreamService"

abstract class "Market Ticks::Presentation::State::TickStreamState" {
}

class "Market Ticks::Presentation::TickStreamPage" {
}

"Market Ticks::Presentation::State::TickSteamCubit" o-- "Market Ticks::Presentation::State::TickStreamState"
"Market Ticks::Presentation::State::TickStreamState" o-- "Market Ticks::Presentation::TickStreamEntity"
"Market Ticks::Presentation::TickStreamPage" o-- "Market Ticks::Presentation::TickStreamWidget"
"Market Ticks::Presentation::TickStreamPage" o-- "Market Ticks::Presentation::State::TickSteamCubit"

@enduml
