@startuml

!theme aws-orange
!theme plain

set namespaceSeparator ::

left to right direction

abstract class "State Listeners::ConnectivityStateListener" {
  +void onConnectivityChanged()
}

abstract class "Domain::BaseRepository" {
  +BaseMapper<BaseEntity, BaseModel> mapper
  +BaseDataSource dataSource
}

"Domain::BaseRepository" o-- "Domain::Base Mapper::BaseMapper<BaseEntity, BaseModel>"
"Domain::BaseRepository" o-- "Domain::BaseDataSource"

abstract class "Domain::Base Mapper::BaseMapper" {
  +M toModel()
  +E toEntity()
}

abstract class "Domain::BaseModel" {
}

abstract class "Domain::::BaseService" {
  +BaseRepository repository
}

"Domain::::BaseService" o-- "Domain::BaseRepository"

abstract class "Domain::BaseDataSource" {
}

abstract class "Domain::BaseEntity" {
}

class "data::TickStreamRepoistory" {
  +Stream<TickStreamEntity> getTickStream()
}

"Domain::BaseRepository" <|-- "data::TickStreamRepoistory"

class "data::TickStreamModel" {
  +double ask
  +double bid
  +int epoch
  +String id
  +int pipSize
  +double quote
  +String symbol
}

"Domain::BaseModel" <|-- "data::TickStreamModel"

class "data::TickStreamMapper" {
  +TickStreamModel toModel()
  +TickStreamEntity toEntity()
}

"Domain::Base Mapper::BaseMapper" <|-- "data::TickStreamMapper"

class "data::TickStreamDataSource" {
  +Stream<Map<String, dynamic>> getTickStream()
}

"Domain::BaseDataSource" <|-- "data::TickStreamDataSource"

class "Presentation::TickStreamService" {
  +Stream<TickStreamEntity> getTickStream()
}

"Domain::::BaseService" <|-- "Presentation::TickStreamService"

class "Presentation::TickStreamWidget" {
  +TickStreamEntity entity
}

"Presentation::TickStreamWidget" o-- "Presentation::TickStreamEntity"

class "Presentation::State::TickStreamCubitExtended" {
  +void onConnectivityChanged()
}

"Presentation::State::TickStreamCubit" <|-- "Presentation::State::TickStreamCubitExtended"
"State Listeners::ConnectivityStateListener" <|-- "Presentation::State::TickStreamCubitExtended"

class "Presentation::TickStreamEntity" {
  +double ask
  +double bid
  +int epoch
  +String id
  +int pipSize
  +double quote
  +String symbol
}

"Domain::BaseEntity" <|-- "Presentation::TickStreamEntity"

class "Presentation::State::TickStreamCubit" {
  +TickStreamService service
  +void getTickStream()
}

"Presentation::State::TickStreamCubit" o-- "Presentation::TickStreamService"

abstract class "Presentation::State::TickStreamState" {
}

"Presentation::State::TickStreamState" o-- "Presentation::TickStreamEntity"

class "Presentation::TickStreamPage" {
}

"Presentation::TickStreamPage" o-- "Presentation::TickStreamWidget"
"Presentation::TickStreamPage" o-- "Presentation::State::TickStreamCubitExtended"

"Presentation::State::TickStreamCubit" o-- "Presentation::State::TickStreamState"

@enduml
